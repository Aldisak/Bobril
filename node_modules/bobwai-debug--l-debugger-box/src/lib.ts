import * as b from "bobril";

interface IContext extends b.IBobrilCtx {
    data: IData;
}

export interface IData {
    content: b.IBobrilChildren;
    isPositionFixed?: boolean;
    isTopAligned?: boolean;
    minWidth?: number;
}

export let create = b.createComponent<IData>({
    id: "bobwai--example-debugger",
    render(ctx: IContext, me: b.IBobrilNode): void {
        me.children = ctx.data.content;
        b.style(me, debuggerStyle);
        me.style = {};
        if (ctx.data.isPositionFixed) {
            me.style.position = "fixed";
        }
        if (ctx.data.isTopAligned) {
            me.style.top = 0;
        }
        if (typeof ctx.data.minWidth !== "undefined") {
            me.style.minWidth = ctx.data.minWidth;
        }
    }
});

const debuggerStyle = b.styleDef({
    position: "absolute",
    background: "pink",
    right: 0,
    minWidth: 200,
    zIndex: 1 // NOTE: using z-index is not allowed on any productional component
});

// added by script - BEGIN
export const LDebuggerBox = create;
// added by script - END