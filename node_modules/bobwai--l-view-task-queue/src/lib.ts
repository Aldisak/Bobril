import * as b from "bobril";
import * as constants from "./publicConstants";

export * from "./publicConstants";

export enum Position {
    BottomRight,
    BottomLeft,
    TopRight,
    TopLeft
}

export interface IData {
    position?: Position;
    children: b.IBobrilChildren;
    /** Temporary property until useNoZIndex becomes default */
    useNoZIndex?: boolean;
}

interface IContext extends b.IBobrilCtx {
    data: IData;
}

export let create = b.createComponent<IData>({
    id: "bobwai--l-view-task-queue",
    render(ctx: IContext, me: b.IBobrilNode): void {
        me.children = ctx.data.children;
        b.style(me, getStyle(ctx.data));
    }
});

function getStyle(data: IData): b.IBobrilStyles {
    return [
        baseStyle,
        (data.position === Position.BottomRight || data.position === undefined) && bottomRightStyle,
        data.position === Position.BottomLeft && bottomLeftStyle,
        data.position === Position.TopLeft && topLeftStyle,
        data.position === Position.TopRight && topRightStyle,
        data.useNoZIndex && noZIndexStyle
    ];
}

const baseStyle = b.styleDef(
    {
        position: "fixed",
        width: constants.Width,
        zIndex: 1
    },
    {},
    "l-view-task-queue"
);

const noZIndexStyle = b.styleDefEx(
    baseStyle,
    {
        zIndex: "auto"
    },
    {},
    "l-view-task-queue-no-z-index"
);

const bottomRightStyle = b.styleDef(
    {
        bottom: constants.PaddingVertical,
        right: constants.PaddingHorizontal
    },
    {},
    "bottom-right"
);

const bottomLeftStyle = b.styleDef(
    {
        bottom: constants.PaddingVertical,
        left: constants.PaddingHorizontal
    },
    {},
    "bottom-left"
);

const topRightStyle = b.styleDef(
    {
        top: constants.PaddingVertical,
        right: constants.PaddingHorizontal
    },
    {},
    "top-right"
);

const topLeftStyle = b.styleDef(
    {
        top: constants.PaddingVertical,
        left: constants.PaddingHorizontal
    },
    {},
    "top-left"
);

// added by script - BEGIN
export const LViewTaskQueue = create;
// added by script - END
