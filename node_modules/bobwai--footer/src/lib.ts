import * as b from "bobril";
import * as Color from "bobwai--color";

export let create = b.createComponent<IData>({
    id: "bobwai--footer",
    render(ctx: IContext, me: b.IBobrilNode): void {
        me.children = ctx.data.footerText;
        b.style(me, [footerStyle, ctx.data.variant === Variant.Tight && footerSmallStyle, ctx.data.hasTopBorder && footerTopBorderStyle]);
    }
});

export interface IData {
    footerText?: b.IBobrilChildren;
    variant?: Variant;
    hasTopBorder?: boolean;
}

export enum Variant {
    Default,
    Tight
}

interface IContext extends b.IBobrilCtx {
    data: IData;
}

namespace localVariables {
    export const padding = 25;
    export const lineHeight = 30;
    export const marginRight = 5;
    export const marginTop = 25;
}

const footerStyle = b.styleDef(
    {
        lineHeight: `${localVariables.lineHeight}px`,
        minHeight: localVariables.lineHeight,
        textAlign: "right",
        backgroundColor: Color.Grey200,
        paddingRight: localVariables.padding,
        paddingLeft: localVariables.padding,
        marginTop: localVariables.marginTop,
        color: Color.Basic
    },
    {},
    "footer"
);

const footerSmallStyle = b.styleDefEx(footerStyle, {
    marginTop: 0
});

const footerTopBorderStyle = b.styleDefEx(footerStyle, {
    borderTop: `1px solid ${Color.Grey400}`,
    boxSizing: "border-box",
    lineHeight: `${localVariables.lineHeight - 2}px`
});

// added by script - BEGIN
export const Footer = create;
// added by script - END