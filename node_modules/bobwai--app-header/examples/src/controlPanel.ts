import * as b from "bobril";
import * as Example from "bobwai--example";
import * as Checkbox from "bobwai--checkbox";
import * as Combobox from "bobwai--combobox";
import { IData, CenterContentAlign, Theme } from "../../src/lib";

export function getControlPanel(params: {
    data: IData;
    sampleLeftContent: b.IBobrilNode;
    sampleCenterContent: b.IBobrilNode;
    sampleRightContent: b.IBobrilNode;
}): b.IBobrilNode {
    return Example.createControlPanel({
        items: [
            Example.createField({
                label: "Left content",
                fieldType: Example.FieldType.Checkbox,
                fieldFactory: Checkbox.create,
                value: params.data.leftContent !== undefined,
                onChange: (v) => {
                    if (v) {
                        params.data.leftContent = params.sampleLeftContent;
                    } else {
                        params.data.leftContent = undefined;
                    }
                    b.invalidate();
                },
            }),
            Example.createField({
                label: "Center content",
                fieldFactory: Checkbox.create,
                fieldType: Example.FieldType.Checkbox,
                value: params.data.centerContent !== undefined,
                onChange: (v) => {
                    if (v) {
                        params.data.centerContent = params.sampleCenterContent;
                    } else {
                        params.data.centerContent = undefined;
                    }
                    b.invalidate();
                },
            }),
            Example.createField({
                label: "Right content",
                fieldFactory: Checkbox.create,
                fieldType: Example.FieldType.Checkbox,
                value: params.data.rightContent !== undefined,
                onChange: (v) => {
                    if (v) {
                        params.data.rightContent = params.sampleRightContent;
                    } else {
                        params.data.rightContent = undefined;
                    }
                    b.invalidate();
                },
            }),
            Example.createField({
                label: "Center content align",
                customValueContent: Example.createComboEnum({
                    value: params.data.centerContentAlign,
                    onChange: (v) => {
                        params.data.centerContentAlign = v;
                        b.invalidate();
                    },
                    enum: CenterContentAlign,
                    comboboxFactory: Combobox.create,
                }),
            }),
            Example.createField({
                label: "Theme",
                customValueContent: Example.createComboEnum({
                    value: params.data.theme,
                    onChange: (v) => {
                        params.data.theme = v;
                        b.invalidate();
                    },
                    enum: Theme,
                    comboboxFactory: Combobox.create,
                }),
            }),
        ],
    });
}
