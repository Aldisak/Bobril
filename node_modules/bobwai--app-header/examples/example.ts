import * as b from "bobril";
import * as AppHeader from "../src/lib";
import * as Container from "bobwai--viewer-container";
import * as Example from "bobwai--example";
import * as ColorPicker from "bobwai--color-picker";
import * as LField from "bobwai--l-field";
import * as Color from "bobwai--color";
import { getControlPanel } from "./src/controlPanel";

const sampleLeftContent = b.styledDiv({ tag: "div", children: "Left content", attrs: { tabindex: 0 } }, b.styleDef({ background: "lime" }));
const sampleCenterContent = b.styledDiv(
    { tag: "div", children: "Center content", attrs: { tabindex: 0 } },
    b.styleDef({ background: "yellow", textAlign: "center" })
);
const sampleRightContent = b.styledDiv(
    { tag: "div", children: "Right content", attrs: { tabindex: 0 } },
    b.styleDef({ background: "red" })
);
const sampleRightContentLong = b.styledDiv(
    "Right content which is very long (to check asymmetric cases)",
    b.styleDef({ background: "red" })
);
let customAppHeaderColor: Color.IColor = Color.Chart_Purple300;

const defaultData: AppHeader.IData = {};

Example.init({}, () => {
    return [
        Container.create({
            header: "app-header",
            content: AppHeader.create({
                leftContent: sampleLeftContent,
                centerContent: sampleCenterContent,
                rightContent: sampleRightContent,
            }),
        }),
        Container.create({
            header: "app-header, asymmetric example",
            content: AppHeader.create({
                leftContent: sampleLeftContent,
                centerContent: sampleCenterContent,
                rightContent: sampleRightContentLong,
            }),
        }),
        Container.create({
            header: "app-header, asymmetric example centered to page",
            content: AppHeader.create({
                leftContent: sampleLeftContent,
                centerContent: sampleCenterContent,
                rightContent: sampleRightContentLong,
                centerContentAlign: AppHeader.CenterContentAlign.PageCenter,
            }),
            type: Container.Type.experimental,
        }),
        Container.create({
            header: "app-header light theme (interactive)",
            content: AppHeader.create({
                leftContent: sampleLeftContent,
                centerContent: sampleCenterContent,
                rightContent: sampleRightContent,
                theme: AppHeader.Theme.Light,
            }),
        }),
        Container.create({
            header: "app-header oms500 theme",
            content: AppHeader.create({
                leftContent: sampleLeftContent,
                centerContent: sampleCenterContent,
                rightContent: sampleRightContent,
                theme: AppHeader.Theme.OMS500,
            }),
        }),
        Container.create({
            header: "App-header with DXB light theme",
            content: AppHeader.create({
                theme: AppHeader.Theme.DXBLight,
                leftContent: sampleLeftContent,
                centerContent: sampleCenterContent,
                rightContent: sampleRightContent,
            }),
        }),
        Container.create({
            header: "app-header with custom theme and color",
            content: [
                LField.create({
                    labelContent: "Custom color:",
                    valueContent: ColorPicker.create({
                        availableValues: [
                            Color.Chart_Blue300,
                            Color.Chart_Green300,
                            Color.Chart_Purple300,
                            Color.Error500,
                            Color.Chart_Violet500,
                            Color.Info,
                        ],
                        onChange: (color?: string) => {
                            if (color) {
                                customAppHeaderColor = color;
                                b.invalidate();
                            }
                        },
                        value: customAppHeaderColor.toString(),
                    }),
                }),
                AppHeader.create({
                    leftContent: sampleLeftContent,
                    centerContent: sampleCenterContent,
                    rightContent: sampleRightContent,
                    theme: AppHeader.Theme.Custom,
                    customTheme: { backgroundColor: customAppHeaderColor },
                }),
            ],
        }),
        Container.create({
            header: "Tester",
            content: [
                getControlPanel({
                    data: defaultData,
                    sampleLeftContent,
                    sampleCenterContent,
                    sampleRightContent: sampleRightContentLong,
                }),

                AppHeader.create(defaultData),
            ],
        }),
    ];
});
