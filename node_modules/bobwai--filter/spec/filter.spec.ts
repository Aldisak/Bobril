import { BBSeeker, BBBot } from "bbseeker-extended";
import * as Filter from "../src/lib";
import * as StateIcon from "bobwai--state-icon";
import * as b from "bobril";

describe("bobwai--filter test", () => {
    beforeEach(() => {
        b.init(() => {
            return [
                Filter.create({
                    onChange: () => {},
                    onTextClear: () => {},
                    value: "Lorem Ipsum",
                }),
            ];
        });
    });
    it("should check content", async () => {
        await BBBot.checkIfFullyRendered(5);
        const input = await BBSeeker.findElement(".bobwai--filter/~input");
        const clearButton = await BBSeeker.findElement(".bobwai--filter" + StateIcon.Selectors.clickableElement);
        expect(input).not.toBeNull();
        expect(clearButton).not.toBeNull();
        expect((<HTMLInputElement>input).value).toBe("Lorem Ipsum");
    });
});
