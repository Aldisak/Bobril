import * as b from "bobril";
import * as c from "bobwai--viewer-container";
import * as Button from "bobwai--button";
import * as tb from "../../src/lib";

let model = { value: "", button: true };
let onChange = (value: string) => {
    model = { value: value, button: model.button };
    b.invalidate();
};
let forceFocus = false;
let forceBlur = false;

export let create = () => {
    return [
        c.create({
            header: "Textbox with focus on init",
            content: [
                model.button && createButton(),
                !model.button &&
                    tb.create({
                        onChange: onChange,
                        value: model.value,
                        placeholder: "Textbox Placeholder",
                        initState: tb.InitState.focused,
                    }),
            ],
        }),
        c.create({
            header: "Testing of forceFocus: true & forceBlur: true",
            highlightedDescription: `Note: If you set forceFocus:true, you have to set it immediately
		back to false in onFocusIn callback! The same for forceBlur.`,
            content: [
                Button.create({
                    label: "Set focus",
                    onClick: () => {
                        forceFocus = true;
                        b.invalidate();
                    },
                }),
                " ",
                Button.create({
                    label: "Set focus for a while",
                    onClick: () => {
                        forceFocus = true;
                        b.invalidate();
                        setTimeout(() => {
                            forceBlur = true;
                            b.invalidate();
                        }, 2000);
                    },
                }),
                tb.create({
                    onChange: onChange,
                    value: model.value,
                    forceFocus: forceFocus,
                    forceBlur: forceBlur,
                    onFocusIn: () => {
                        forceFocus = false;
                        b.invalidate();
                    },
                    onFocusOut: () => {
                        forceBlur = false;
                        b.invalidate();
                    },
                    placeholder: "Textbox Placeholder",
                }),
            ],
        }),
    ];
};

function createButton(): b.IBobrilNode {
    return {
        tag: "button",
        children: `Hit me and I'll show you focused input`,
        component: {
            onClick() {
                model = { value: "", button: false };
                b.invalidate();
                return true;
            },
        },
    };
}
