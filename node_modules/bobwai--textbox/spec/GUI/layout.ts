import * as b from "bobril";
import { Textbox } from "../../src/lib";
import { getTestStore } from "./store";
import { ValidationState } from "bobwai--form-elements";

const fakeIcon = b.styledDiv("", { width: 20, height: 20, background: "red", display: "inline-block", verticalAlign: "middle" });

export function createLayout(): void {
    b.init(() => {
        return [
            Textbox({
                value: getTestStore().value,
                onChange: (v) => {
                    getTestStore().value = v;
                    b.invalidate();
                },
            }),
            Textbox({
                value: getTestStore().disabledValue,
                isDisabled: true,
                onChange: (v) => {
                    getTestStore().disabledValue = v;
                    b.invalidate();
                },
            }),
            Textbox({
                value: getTestStore().withIconEnabledValue,
                onChange: (v) => {
                    getTestStore().withIconEnabledValue = v;
                    b.invalidate();
                },
                rightIcon: {
                    icon: fakeIcon,
                    iconHover: fakeIcon,
                    onClick: () => {
                        getTestStore().iconClicks++;
                        b.invalidate();
                    },
                },
            }),
            Textbox({
                value: getTestStore().withIconDisabledValue,
                onChange: (v) => {
                    getTestStore().withIconDisabledValue = v;
                    b.invalidate();
                },
                rightIcon: {
                    icon: fakeIcon,
                    iconHover: fakeIcon,
                },
            }),
            Textbox({
                value: getTestStore().value,
                onChange: (v) => {
                    getTestStore().value = v;
                    b.invalidate();
                },
                rightIcon: {
                    icon: fakeIcon,
                    iconHover: fakeIcon,
                },
                webContentAccessibility: {
                    ariaLabel: "Textbox aria label",
                },
            }),
            Textbox({
                value: getTestStore().value,
                onChange: (v) => {
                    getTestStore().value = v;
                    b.invalidate();
                },
                rightIcon: {
                    icon: fakeIcon,
                    iconHover: fakeIcon,
                },
                validationState: ValidationState.Error,
                webContentAccessibility: {
                    isRequired: true,
                    ariaLabel: "Textbox aria label",
                },
            }),
        ];
    });
}
