import { BBSeeker, BBBot } from "bbseeker-extended";
import * as Textbox from "../src/lib";
import * as b from "bobril";
import * as Icon from "bobwai--icon";

const rightIcon = Icon.create({ sprite: b.sprite(Icon.settings_small_png) });

describe("bobwai--textbox test", () => {
    beforeEach(() => {
        b.init(() => {
            return [
                Textbox.create({
                    onChange: () => {},
                    value: "text",
                    rightIcon: {
                        onClick: () => {},
                        iconHover: rightIcon,
                        icon: rightIcon,
                    },
                    isDisabled: true,
                }),
            ];
        });
    });
    it("check value and structure", async () => {
        await BBBot.checkIfFullyRendered(5);
        const input = await BBSeeker.findElement(".bobwai--textbox/input");
        const icon = await BBSeeker.findElement(".bobwai--textbox/~.bobwai--icon");
        expect(input).not.toBeNull();
        if (input) {
            expect((<HTMLInputElement>input).value).toBe("text");
        } else {
            fail("input not found");
        }
        expect((<HTMLInputElement>input).disabled).toBe(true);
        expect(icon).not.toBeNull();
    });
});
