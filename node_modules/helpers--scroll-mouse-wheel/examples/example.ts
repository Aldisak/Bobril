import * as b from 'bobril';
import * as Color from "bobwai--color";
import * as Container from 'bobwai--viewer-container';
import * as Example from 'bobwai--example';
import { handleMouseWheelScroll } from '../src/lib';

let description = 'Scroll child element with wheel when on end of scroll move mouse and scroll with wheel again - container element is';
Example.init({}, () => {
    return [
        Container.create({
            header: 'Mouse wheel scroll handled',
            description: description + " not scrolled",
            content: getSample(true)
        }),
        Container.create({
            header: 'Without handling mouse wheel scroll',
            description: description + " scrolled",
            content: getSample(false)
        })
    ];
});

function getSample(handleMouseWheel: boolean) {
    return b.styledDiv(
        ["container", createElementWithScroll({ handleMouseWheel: handleMouseWheel })],
        containerStyle
    );
}

const createElementWithScroll = b.createComponent<IData>({
    render(_ctx: ICtx, me: b.IBobrilNode) {
        me.children = b.styledDiv("child", childStyle);
        b.style(me, parentStyle);
    },
    onMouseWheel(ctx: ICtx, event: b.IBobrilMouseWheelEvent) {
        let element = <HTMLElement>ctx.me.element;
        return ctx.data.handleMouseWheel ? handleMouseWheelScroll(element, event) : false;
    }
})

interface ICtx extends b.IBobrilCtx {
    data: IData;
}

interface IData {
    handleMouseWheel: boolean;
}

const baseWidth = 400;
const baseFontSize = 20;
const basePadding = 10;

const containerStyle = b.styleDef({
    height: 200,
    width: baseWidth,
    overflowY: "scroll",
    background: Color.Chart_Blue500,
    border: `solid 2px ${Color.Black}`,
    fontSize: baseFontSize,
    padding: basePadding
})

const childStyle = b.styleDef({
    height: 100 * 4,
    background: Color.Application,
    fontSize: baseFontSize,
    padding: basePadding
})

const parentStyle = b.styleDef({
    width: baseWidth / 2,
    height: 150,
    overflowY: "scroll",
    border: `solid 5px ${Color.Chart_Brown500}`,
    marginBottom: 500
});