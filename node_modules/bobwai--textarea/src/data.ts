import * as b from "bobril";
import * as FormElements from "bobwai--form-elements";
import * as WebContentAccessibility from "helpers--web-content-accessibility";
import * as Color from "bobwai--color";

export enum Resize {
    None,
    Both,
    Vertical,
    Horizontal,
}

export enum InitState {
    focused,
    selectedText,
}

export enum RadiusVariant {
    Top,
    Bottom,
    All,
}

export interface ISelection {
    start: number;
    end: number;
}

export interface IData {
    onChange?: (value: string) => void;
    onFocusIn?: (ctx: b.IBobrilCtx) => void;
    onFocusOut?: (ctx: b.IBobrilCtx) => void;
    selection?: ISelection;
    onSelectionChange?: (selection: b.ISelectionChangeEvent) => void;
    onVerticalScroolVisibilityChange?: (width: number) => void;
    onTextHeightChange?: (scrollHeight: number, delta: number) => void /* Is emitted when textarea scrollHeight is changed */;
    onRowsCountChange?: (rowsCount: number) => void;
    value?: string;
    placeholder?: string;
    rows?: number;
    /**
     * @obsolete: can be removed in future
     */
    cols?: number;
    validationState?: FormElements.ValidationState;
    initState?: InitState;
    isDisabled?: boolean;
    isHighlighted?: boolean;
    isReadOnly?: boolean;
    isTextPreview?: boolean;
    noWrap?: boolean;
    /**
     * @obsolete: can be removed in future
     */
    resize?: Resize;
    radiusVariant?: RadiusVariant;
    spellcheckEnabled?: boolean;
    autoHeight?: boolean;
    maxLength?: number;
    customTheme?: ICustomTheme;
    isOnChangeWithDelay?: boolean;
    webContentAccessibility?: WebContentAccessbility;
}

export interface ICustomTheme {
    backgroundColor?: Color.IColor;
    fontStyle?: string;
    fontFamily?: string;
    fontSize?: number;
    padding?: number | string;
    border?: string;
    borderVisibility?: FormElements.IBorderVisibility;
    overflowY?: string;
    scrollbarY?: string;
    lineHeight?: string;
}

export type WebContentAccessbility = Pick<WebContentAccessibility.IWebContentAccessibility, "ariaLabel" | "validationMessage">;
