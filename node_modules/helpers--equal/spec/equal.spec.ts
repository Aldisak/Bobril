import { deepEqual } from "../src/lib";

describe("Deep equal", () => {
    let a = { top: 10, left: 20 };
    let b = { top: 10, left: 20 };
    let c = { top: 10, left: null };
    let d = { top: 10 };
    let e = { top: 10, left: 20, width: 30, height: 40 };

    let f = { top: 10, left: 20, kid: a };
    let g = { top: 10, left: 20, kid: b };
    let h = { top: 10, left: 20, kid: c };
    let i = { top: 10, left: 20, kid: d };
    let j = { top: 10, left: 20, kid: e };
    let k = { top: 10, left: null, kid: a };
    let l = { top: 10, left: 20, kid: a, kid2: a };

    describe("First level tests", () => {
        it("should detect equality for the same object ", () => {
            expect(deepEqual(a, a)).toBeTruthy();
        });

        it("should detect equality for object with equal properties and values ", () => {
            expect(deepEqual(a, b)).toBeTruthy();
        });

        it("should detect unequality for object with unequal values ", () => {
            expect(deepEqual<{ top: number | null; left: number | null }>(a, c)).toBeFalsy();
        });

        it("should detect unequality for object with missing properties ", () => {
            expect(deepEqual(a, d)).toBeFalsy();
        });

        it("should detect unequality for object with extra properties ", () => {
            expect(deepEqual(a, e)).toBeFalsy();
        });
    });

    describe("Second level tests", () => {
        it("should detect equality for the same child ", () => {
            expect(deepEqual(f, f)).toBeTruthy();
        });

        it("should detect equality for child with equal properties and values ", () => {
            expect(deepEqual(f, g)).toBeTruthy();
        });

        it("should detect unequality for child with unequal values ", () => {
            expect(deepEqual<{ top: number | null; left: number | null }>(f, h)).toBeFalsy();
        });

        it("should detect unequality for child with missing properties ", () => {
            expect(deepEqual(f, i)).toBeFalsy();
        });

        it("should detect unequality for child with extra properties ", () => {
            expect(deepEqual(f, j)).toBeFalsy();
        });

        it("should detect unequality for equal child but unequal property ", () => {
            expect(deepEqual<{ top: number | null; left: number | null }>(f, k)).toBeFalsy();
        });

        it("should detect unequality for object with extra child ", () => {
            expect(deepEqual(f, l)).toBeFalsy();
        });
    });
});
