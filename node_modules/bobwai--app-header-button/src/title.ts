import * as b from "bobril";
import * as d from "./data";
import * as Mixins from "bobwai--style-mixins";
import * as Font from "bobwai--font";
import * as rtlTextHelper from "helpers--rtl-text";
import * as Constants from "./publicConstants";
import { isActionTypeButton } from "./helper";

// Text color of the title is defined in the whole button style
export function create(params: { data: d.IData; disabledOpacity: number; isPreIconTitle?: boolean }): b.IBobrilNode {
    const data = params.data;
    const isPreIconTitle = params.isPreIconTitle;
    const disabledOpacity = params.disabledOpacity;
    //const isLightTheme = data.theme === d.Theme.Light;
    return b.styledDiv(isPreIconTitle ? data.preIconTitle : data.title, [
        titleStyle,
        //isHover &&
        //isHover && isLightTheme && (data.icon ? titleLightHoveredStyle : titleLightHoveredNoIconStyle),
        isActionTypeButton(data) && (data.icon === undefined || isPreIconTitle) && titleForActionButtonLeftPaddingStyle,
        isActionTypeButton(data) && data.rightIcon === undefined && !isPreIconTitle && titleForActionButtonRightPaddingStyle,
        data.type === d.Type.Action && titleSmallFontStyle,
        isActionTypeButton(data) && titleStyleSemiBold,
        data.isDisabled && { opacity: disabledOpacity },
        rtlTextHelper.getRtlTextStyles({
            text: data.title,
            enableRTL: Constants.EnableRTL,
        }),
    ]);
}

namespace localVariables {
    export const fontSizeDefault = "13px";
    export const fontSizeSmall = "13px";
    export const fontWeightSemiBold = Font.FontWeightSemibold;
    export const actionButtonTitleSidePadding = Mixins.Spacing.Spacing300;
}

const titleStyle = b.styleDef(
    [Mixins.centerVerticalChildInlineBlock(), { fontSize: localVariables.fontSizeDefault, position: "relative" }],
    {},
    "app-header-btn-title"
);

const titleForActionButtonLeftPaddingStyle = b.styleDef({
    paddingLeft: localVariables.actionButtonTitleSidePadding,
});
const titleForActionButtonRightPaddingStyle = b.styleDef({
    paddingRight: localVariables.actionButtonTitleSidePadding,
});

// const titleLightHoveredStyle = b.styleDef([
//     titleStyle,
//     {
//         verticalAlign: "top",
//         lineHeight: "20px",
//         marginRight: "5px"
//     }
// ]);

// const titleLightHoveredNoIconStyle = b.styleDef([
//     titleLightHoveredStyle,
//     {
//         marginLeft: "5px"
//     }
// ]);

const titleSmallFontStyle = b.styleDef({
    fontSize: localVariables.fontSizeSmall,
});

const titleStyleSemiBold = b.styleDef({ fontWeight: localVariables.fontWeightSemiBold });
