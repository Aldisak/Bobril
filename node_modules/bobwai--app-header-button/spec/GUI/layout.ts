import * as b from "bobril";
import * as HeaderButton from "../../src/lib";
import * as Icon from "bobwai--icon";
import * as Color from "bobwai--color";
import { getTestStore } from "./store";

const icon = Icon.create({ sprite: b.sprite(Icon.user_small_png, Color.White_75) });
const hoveredIcon = Icon.create({ sprite: b.sprite(Icon.user_small_png, Color.White) });
const rightIcon = Icon.create({ sprite: b.sprite(Icon.sort_desc_small_png, Color.White_75) });
const rightHoveredIcon = Icon.create({ sprite: b.sprite(Icon.sort_desc_small_png, Color.White) });

function incrementCounter(index: number) {
    getTestStore().buttonCounter[index]++;
}

export function createLayout(): void {
    b.init(() => {
        return [
            HeaderButton.create({
                onClick: () => {
                    incrementCounter(0);
                },
                onMouseEnter: () => {
                    getTestStore().onEnterCount += 1;
                },
                title: "BUTTON",
                icon: icon,
                hoveredIcon: hoveredIcon,
            }),
            HeaderButton.create({
                onClick: () => {
                    incrementCounter(1);
                },
                title: "BUTTON",
            }),
            HeaderButton.create({
                onClick: () => {
                    incrementCounter(2);
                },
                title: "BUTTON",
                icon: icon,
                hoveredIcon: hoveredIcon,
                rightIcon: rightIcon,
                rightHoveredIcon: rightHoveredIcon,
            }),
            HeaderButton.create({
                onClick: () => {
                    incrementCounter(3);
                },
                icon: icon,
                hoveredIcon: hoveredIcon,
            }),
            HeaderButton.create({
                title: "BUTTON",
                onClick: () => {
                    incrementCounter(4);
                },
                rightIcon: rightIcon,
                rightHoveredIcon: rightHoveredIcon,
            }),
            HeaderButton.create({
                icon: icon,
                hoveredIcon: hoveredIcon,
                onClick: () => {
                    incrementCounter(5);
                },
                rightIcon: rightIcon,
                rightHoveredIcon: rightHoveredIcon,
            }),
            HeaderButton.create({
                onClick: () => {
                    incrementCounter(6);
                },
                isSelected: true,
                siblingButtons: HeaderButton.SiblingButtons.Right,
                icon: icon,
                rightHoveredIcon: hoveredIcon,
            }),
            HeaderButton.create({
                onClick: () => {
                    incrementCounter(7);
                },
                siblingButtons: HeaderButton.SiblingButtons.Both,
                icon: icon,
                rightHoveredIcon: hoveredIcon,
            }),
            HeaderButton.create({
                onClick: () => {
                    incrementCounter(8);
                },
                siblingButtons: HeaderButton.SiblingButtons.Left,
                icon: icon,
                rightHoveredIcon: hoveredIcon,
            }),
            HeaderButton.create({
                onClick: () => {
                    incrementCounter(9);
                },
                title: "SELECTED",
                isSelected: true,
                icon: icon,
                hoveredIcon: hoveredIcon,
            }),
            HeaderButton.create({
                onClick: () => {
                    incrementCounter(10);
                },
                title: "DISABLED",
                icon: icon,
                hoveredIcon: hoveredIcon,
                isDisabled: true,
            }),
        ];
    });
}
