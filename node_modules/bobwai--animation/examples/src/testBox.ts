import * as b from "bobril";

export let create = b.createComponent<IData>({
    id: "bobwai--animation-hoverbox",
    onMouseLeave(ctx: IContext): boolean {
        changeHover(ctx, false);
        return true;
    },
    onMouseEnter(ctx: IContext): boolean {
        changeHover(ctx, true);
        return true;
    },
    render(ctx: IContext, me: b.IBobrilNode): void {
        me.children = ctx.data.content;
        b.style(me, testboxStyle);
    }
});

export interface IData {
    content: b.IBobrilChildren;
    onStateChange(isActive: boolean): void;
}

export interface IContext extends b.IBobrilCtx {
    data: IData;
    hasHover: boolean;
}

function changeHover(ctx: IContext, hasHover: boolean): void {
    if (hasHover !== ctx.hasHover) {
        ctx.hasHover = hasHover;
        if (ctx.data.onStateChange) {
            ctx.data.onStateChange(hasHover);
        }
    }
}

const testboxStyle = b.styleDef({
    width: 300,
    height: 100,
    fontWeight: "bold",
    fontSize: 20,
    textAlign: "center",
    verticalAlign: "middle",
    display: "inline-block"
});
