export interface IErrorInfoBase {
    error: string;
    errorParameters?: string[];
    localizableParametersIds?: number[];
    parametersLocalizations?: { [key: number]: { [key: string]: string } };
}

export interface IErrorInfo extends IErrorInfoBase {
    propertyErrors?: { [key: string]: IErrorInfoBase[] };
    errorType: string;
}

export interface IValidationTypeEnum {
    NotNull: string;
    Required: string;
    StringLength: string;
    StringPattern: string;
    DoubleRange: string;
    IntRange: string;
    DateRange: string;
    EmailFormat: string;
    DateFormat: string;
    DecimalFormat: string;
    HexaColorFormat: string;
    CollectionRange: string;
    LongRange: string;

    getName: (enumValue: string) => string;
}

export interface IValidationMessageParameterDto {
    value: string;
    isLocalizable: boolean;
}

export interface IValidationRuleDto {
    type: string;
    minLength: number;
    maxLength: number;
    minInt: number;
    maxInt: number;
    minDouble: number;
    maxDouble: number;
    minLong: number;
    maxLong: number;
    minShort: number;
    maxShort: number;
    minUlong: number;
    maxUlong: number;
    minDate: Date;
    maxDate: Date;
    pattern?: string;
    forbiddenCharacters?: string;
    message?: string;
    singleEmailAddress: boolean;
    parameters: IValidationMessageParameterDto[];
    allowValueForNullable?: boolean;
}

export interface IValidationRulesDto {
    rules: { [key: string]: IValidationRuleDto[] };
}
