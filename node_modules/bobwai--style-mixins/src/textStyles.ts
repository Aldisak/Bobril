import * as b from "bobril";
import * as Font from "bobwai--font";
import * as Color from "bobwai--color";

namespace localVariables {
    export const signInTitleSize = 30;
    export const heading100FontSize = 22;
    export const heading150FontSize = 18;
    export const heading200FontSize = 16;
    export const heading300FontSize = 13;
    export const heading400FontSize = 13;
    export const heading500FontSize = 11;
    export const subtitle200Size = 14;
}

type HeadingCss = Required<Pick<b.CSSInlineStyles, "fontSize" | "fontWeight" | "color" | "lineHeight">> &
    Pick<b.CSSInlineStyles, "textTransform">;

const heading100: HeadingCss = {
    fontSize: localVariables.heading100FontSize,
    fontWeight: Font.FontWeightLight,
    lineHeight: `36px`,
    color: Color.Basic,
};

const heading150: HeadingCss = {
    fontSize: localVariables.heading150FontSize,
    fontWeight: Font.FontWeightRegular,
    lineHeight: `28px`,
    color: Color.Basic,
};

const heading200: HeadingCss = {
    fontSize: localVariables.heading200FontSize,
    fontWeight: Font.FontWeightRegular,
    lineHeight: `24px`,
    color: Color.Basic,
};

const heading300: HeadingCss = {
    fontSize: localVariables.heading300FontSize,
    fontWeight: Font.FontWeightBold,
    lineHeight: `20px`,
    color: Color.Basic,
};

const heading400: HeadingCss = {
    fontSize: localVariables.heading400FontSize,
    fontWeight: Font.FontWeightSemibold,
    lineHeight: `20px`,
    color: Color.Basic,
};

const heading500: HeadingCss = {
    fontSize: localVariables.heading500FontSize,
    fontWeight: Font.FontWeightRegular,
    lineHeight: `20px`,
    color: Color.Basic,
    textTransform: "uppercase",
};

export namespace headingStyleMixins {
    export function getHeading100TextStyle(): b.CSSInlineStyles {
        return heading100;
    }
    export function getHeading150TextStyle(): b.CSSInlineStyles {
        return heading150;
    }
    export function getHeading200TextStyle(): b.CSSInlineStyles {
        return heading200;
    }
    export function getHeading300TextStyle(): b.CSSInlineStyles {
        return heading300;
    }
    export function getHeading400TextStyle(): b.CSSInlineStyles {
        return heading400;
    }
    export function getHeading500TextStyle(): b.CSSInlineStyles {
        return heading500;
    }
}

/**
 * Deprecated - use Headings mixins instead of this
 * textStylesMixin will be removed in future
 */
export namespace textStylesMixin {
    export function getSignInTitleTextStyles(): b.CSSInlineStyles {
        return {
            fontSize: localVariables.signInTitleSize,
            fontWeight: Font.FontWeightLight,
            color: Color.Basic,
        };
    }

    /** Deprecated - use getHeading100TextStyle instead of this */
    export function getPageTitleTextStyles(): b.CSSInlineStyles {
        return heading100;
    }

    /** Deprecated - use getHeading200TextStyle instead of this */
    export function getModalTitleTextStyles(): b.CSSInlineStyles {
        return {
            fontSize: localVariables.heading150FontSize,
            fontWeight: Font.FontWeightRegular,
            color: Color.Basic,
        };
    }

    /** Deprecated - use getHeading300TextStyle instead of this */
    export function getSubtitle100TextStyles(): b.CSSInlineStyles {
        return {
            fontSize: localVariables.heading200FontSize,
            fontWeight: Font.FontWeightRegular,
            color: Color.Basic,
        };
    }

    /** Deprecated - use getHeading400TextStyle instead of this */
    export function getSubtitle200TextStyles(): b.CSSInlineStyles {
        return {
            fontSize: localVariables.subtitle200Size,
            fontWeight: Font.FontWeightSemibold,
            color: Color.Basic,
        };
    }
}
