import * as b from "bobril";
import * as color from "bobwai--color";

export const textAreaRowsCount = 3;
export const labelPaddingTop = 25;
export const labelMarginBottom = 25;
export const editboxIconStyle = getIconStyle("30px", `0px 10px 12px 25px`);

export const labelPaddingBottom = 10;
export const labelFontSize = 18;
export const borderWidth = 1;
export const textAreaHeight = 55;
export const textAreaPadding = 8;
export const submitButtonHeight = 35;
export const wrapperPaddingBottom = 5;
export const newRootCommentLabel = 42;

export const chatWrapperStyle = b.styleDef(
    {
        width: "100%",
        height: "100%",
        boxSizing: "border-box"
    },
    {},
    "bobwai--chat-wrapper"
);

export const chatLabelStyle = b.styleDef(
    {
        paddingTop: labelPaddingTop,
        paddingBottom: labelPaddingBottom,
        marginLeft: 25,
        marginRight: 25,
        marginBottom: labelMarginBottom,
        fontSize: labelFontSize,
        borderBottom: `${borderWidth}px solid ${color.Grey300}`
    },

    {},
    "bobwai--chat-label"
);

export const commentSeparatorStyle = b.styleDef(
    {
        borderBottom: `${borderWidth}px solid ${color.Grey300}`,
        marginRight: 25,
        marginLeft: 25
    },
    {},
    "bobwai--chat-comment-separator"
);

export const commentSeparatorWithoutAvatarStyle = b.styleDef(
    {
        borderBottom: `${borderWidth}px solid ${color.Grey300}`
    },
    {},
    "bobwai--chat-comment-separator"
);

export const newCommentStyle = b.styleDef(
    {
        borderBottom: "1px solid " + color.Grey300
    },
    {},
    "bobwai--chat-new-comment"
);

export const commentSectionStyle = b.styleDef(
    {
        width: "100%",
        boxSizing: "border-box",
        overflowY: "hidden",
        height: `calc(100% - ${labelPaddingTop +
            labelFontSize +
            6 +
            labelPaddingBottom +
            borderWidth +
            labelMarginBottom +
            textAreaHeight +
            2 * textAreaPadding +
            3 * borderWidth +
            submitButtonHeight +
            wrapperPaddingBottom}px)`
    },
    {},
    "bobwai--chat-comment-section"
);

export const editboxWrapperStyle = b.styleDef(
    {
        width: "100%",
        overflowY: "auto",
        overflowX: "hidden",
        paddingBottom: wrapperPaddingBottom,
        paddingLeft: wrapperPaddingBottom,
        paddingRight: wrapperPaddingBottom,
        marginRight: -wrapperPaddingBottom,
        marginLeft: -wrapperPaddingBottom,
        boxSizing: "border-box"
    },
    {},
    "bobwai--chat-reply-editbox-wrapper"
);

export const commentIconStyle = b.styleDef(
    {
        display: "inline-block",
        verticalAlign: "top"
    },
    {},
    "bobwai--new-comment-icon"
);

export const newCommentLabelStyle = b.styleDef(
    {
        paddingLeft: 5,
        display: "inline-block",
        fontWeight: "bold"
    },
    {},
    "bobwai--new-comment-label"
);

export const newCommentHeaderStyle = b.styleDef(
    {
        padding: "15px 0 7px 25px"
    },
    {},
    "bobwai--new-comment-label"
);

export function getIconStyle(iconSizeString: string, margin: string) {
    return b.styleDef(
        {
            width: iconSizeString,
            height: iconSizeString,
            backgroundColor: color.Grey500,
            margin: margin,
            cssFloat: "left",
            borderRadius: "50%"
        },
        {},
        "bobwai--chat-reply-editbox-icon"
    );
}

export function countTextBoxWidth(iconSize: string, marginCount: number, boxmargin?: string) {
    return b.styleDef(
        {
            width: `calc(100% - ${iconSize} - ${marginCount * 10}px)`,
            cssFloat: "left",
            margin: boxmargin ? `${boxmargin}` : 0
        },
        {},
        "bobwai--chat-reply-editbox-textbox"
    );
}
