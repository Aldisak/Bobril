import * as b from "bobril";
import * as color from "bobwai--color";
import * as StyleMixins from "bobwai--style-mixins";

const imageSize = "30px";
const commentWidth = "100%";
const imageMargin = "2px 10px 0px 0px";
const subImageMargin = "2px 11px 0px 0px";
const controlPanelPadding = 40;
const controlPanelBottomPadding = 5;
const replyControlPanelPadding = 35;
const subImageSize = "24px";
const leftRightPadding = 25;
const replyTopSpace = 10;
const rootCommentTopSpace = 20;
const lineHeight = "19px";

export const simpleWrapperStyle = b.styleDef(
    {
        width: commentWidth,
        overflow: "auto"
    },
    {},
    "bobwai--chat-comment-wrapper--simple"
);

export const rootCommentStyle = b.styleDef(
    {
        paddingTop: rootCommentTopSpace,
        paddingLeft: leftRightPadding,
        paddingRight: leftRightPadding,
        fontSize: "13px"
    },
    {},
    "bobwai--chat-root-comment"
);

export const replyWrapperStyle = replyWrapper(replyTopSpace, controlPanelPadding + leftRightPadding);
export const replyWrapperWithoutAvatarStyle = replyWrapper(5, 50);

export const replyControlPanelWrapper = b.styleDef(
    {
        width: "100%",
        paddingLeft: replyControlPanelPadding,
        boxSizing: "border-box"
    },
    {},
    "bobwai--chat-comment-reply-control-panel-wrapper"
);

export const replyControlPanelWrapperWithoutAvatar = b.styleDef(
    {
        width: "100%",
        boxSizing: "border-box"
    },
    {},
    "bobwai--chat-comment-reply-control-panel-wrapper-without-avatar"
);

export const commentControlPanelWrapper = b.styleDef(
    [
        replyControlPanelWrapper,
        {
            paddingLeft: controlPanelPadding,
            paddingBottom: controlPanelBottomPadding
        }
    ],
    {},
    "bobwai--chat-comment-control-panel-wrapper"
);

export const commentControlPanelWrapperWithoutAvatar = b.styleDef(
    [
        replyControlPanelWrapper,
        {
            paddingLeft: 0,
            paddingBottom: controlPanelBottomPadding
        }
    ],
    {},
    "bobwai--chat-comment-control-panel-wrapper-without-avatar"
);

export const replyTextboxWrapper = b.styleDef(
    {
        width: "100%",
        boxSizing: "border-box",
        paddingLeft: 0,
        overflow: "hidden"
    },
    {},
    "bobwai--chat-comment-reply-textbox-wrapper"
);

export const selectedWrapperStyle = b.styleDef(
    {
        background: color.Application_30
    },
    {},
    "bobwai--chat-comment-wrapper--selected"
);

export const imageStyle = getIconStyle(imageSize);
export const subImageStyle = getIconStyle(subImageSize, subImageMargin);

export const contentWrapperStyle = b.styleDef(
    {
        width: commentWidth,
        fontSize: "13px",
        fontWeight: 400,
        cssFloat: "left",
        boxSizing: "border-box",
        overflow: "auto"
    },
    {},
    "bobwai--chat-comment-content-wrapper"
);

export const commentHeaderWrapper = b.styleDef(
    {
        boxSizing: "border-box",
        overflow: "auto",
        lineHeight: "20px"
    },
    {},
    "bobwai--chat-comment-content-header"
);

export const nameStyle = b.styleDef(
    [
        StyleMixins.lineEllipsis(),
        {
            width: "60%",
            fontWeight: 700,
            boxSizing: "border-box",
            cssFloat: "left"
        }
    ],
    {},
    "bobwai--chat-comment-content-header-name"
);

export const commentIconStyle = b.styleDef(
    {
        cssFloat: "left",
        marginRight: 5,
        verticalAlign: "top"
    },
    {},
    "bobwai--new-comment-icon"
);

export const replyStyle = b.styleDef(
    {
        marginTop: 12,
        marginLeft: leftRightPadding + controlPanelPadding,
        marginRight: leftRightPadding
    },
    {},
    "bobwai--chat-comment-content-reply"
);

export const replyStyleWithoutAvatar = b.styleDef(
    {
        marginTop: 12,
        marginLeft: 2 * leftRightPadding,
        marginRight: leftRightPadding
    },
    {},
    "bobwai--chat-comment-content-reply"
);

export const dateStyle = b.styleDef(
    {
        width: "40%",
        cssFloat: "right",
        color: color.Basic,
        fontSize: "12px",
        textAlign: "right"
    },
    {},
    "bobwai--chat-comment-content-header-date"
);

export const textareaEditStyle = b.styleDef(
    {
        paddingTop: 7
    },
    {},
    "bobwai--textarea"
);

export const readOnlyStyle = b.styleDef(
    {
        marginBottom: 15
    },
    {},
    "bobwai--read-only"
);

export const textStyle = b.styleDef(baseTextStyle(40), {}, "bobwai--chat-comment-content-text");

export const textStyleWithoutAvatarReply = b.styleDef([baseTextStyle(0)], {}, "bobwai--chat-comment-content-text-without-avatar");

export const replyTextStyle = b.styleDef(baseTextStyle(35), {}, "bobwai--chat-comment-reply-content-text");

export const textColorStyle = getTextStyle(color.Grey500, "bobwai--chat-comment-content-text-color");

export const textDisableColorStyle = getTextStyle(color.Grey400, "bobwai--chat-comment-content-disable-text-color");

export const textDisableSelectedColorStyle = getTextStyle(color.Grey500, "bobwai--chat-comment-content-disable-select-text-color");

export const textColorSelectedStyle = getTextStyle(color.Grey600, "bobwai--chat-comment-content-text-selected-color");

export const textMarkedStyle = b.styleDef({ textDecoration: "line-through" }, {}, "bobwai--chat-comment-content-text-marked");

export const textWidthStyle = b.styleDef({ width: "52%" }, {}, "bobwai--chat-comment-content-text-marked");

export const withoutAvatar = getRootCommentStyle(15);

function getTextStyle(textColor: string, nameHint: string) {
    return b.styleDef({ color: textColor, lineHeight: lineHeight }, {}, nameHint);
}

function getIconStyle(iconSizeString: string, customMargin?: string) {
    return b.styleDef(
        {
            width: iconSizeString,
            height: iconSizeString,
            backgroundColor: color.Grey500,
            cssFloat: "left",
            margin: customMargin ? customMargin : imageMargin,
            borderRadius: "50%"
        },
        {},
        "bobwai--chat-comment-image"
    );
}

function getRootCommentStyle(paddingTop: number) {
    return b.styleDef(
        {
            paddingTop: paddingTop,
            paddingLeft: leftRightPadding,
            paddingRight: leftRightPadding,
            fontSize: "13px"
        },
        {},
        "bobwai--chat-root-comment"
    );
}

function baseTextStyle(paddingLeft: number) {
    return {
        paddingLeft: paddingLeft,
        width: "100%",
        boxSizing: "border-box",
        whiteSpace: "pre-wrap",
        wordWrap: "break-word"
    };
}

function replyWrapper(paddingTop: number, paddingLeft: string | number) {
    return b.styleDef(
        {
            width: commentWidth,
            paddingTop: paddingTop,
            paddingLeft: paddingLeft,
            paddingRight: leftRightPadding,
            boxSizing: "border-box",
            overflow: "auto"
        },
        {},
        "bobwai--chat-comment-wrapper--padded"
    );
}

export const checkBoxMarkStyle = b.styleDef(
    {
        cssFloat: "right",
        paddingLeft: 5,
        marginTop: "-1px"
    },
    {},
    "bobwai--chat-checkbox"
);

export const collapseButtonLabelStyle = b.styleDef(
    {
        textAlign: "right"
    },
    {},
    "bobwai--chat-comment-collapse-replies-label"
);
