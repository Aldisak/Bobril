import * as b from "bobril";
import * as container from "bobwai--viewer-container";
import * as chat from "../../src/lib";
import * as h from "./helpers";

let model = {
    activeCommentId: 0,
    comments: [
        {
            id: 1,
            text: "Some comment with selected area.",
            userName: null,
            created: "11 December",
            controlPanel: h.createViewAreaButton("VIEW AREA", () => {
                alert("Show your document area.");
            }),
            submitControlPanel: h.createAddAreaButton(() => {
                alert("Add your document area for reply.");
            }),
            replies: [
                {
                    id: 11,
                    text: "Some reply.",
                    userName: "John Doe",
                    created: "12 December",
                    controlPanel: h.createViewAreaButton("VIEW AREA", () => {
                        alert("Boooo!");
                    }),
                    replies: []
                },
                { id: 12, text: "Second reply.", userName: "John Doe", created: "12 December", replies: [] }
            ]
        }
    ]
};

let activeCommentValue = "";

export let create = () => {
    return container.create({
        header: "bobwai--chat with submitted comment which have control panel (CJM - view document area button))",
        content: chat.create({
            labels: {
                submit: "Submit",
                reply: "Reply",
                label: "Social Commenting",
                cancel: "Cancel",
                edit: "Edit",
                removeComment: "Delete"
            },
            icon: h.iconAnonymousComment,
            activeCommentValue: activeCommentValue,
            activeCommentId: model.activeCommentId,
            defaultRootCommentId: -1,
            onChangeActiveCommentId: id => {
                model = { activeCommentId: id, comments: model.comments };
                b.invalidate();
            },
            onChangeActiveCommentValue: (value: string) => {
                activeCommentValue = value;
                b.invalidate();
            },
            onActiveCommentSubmit: (parentCommentId, text: string) => {
                alert(`Parent comment Id: parentCommentId ${parentCommentId}: ${text}`);
            },
            onEditComment: () => {
                return;
            },
            onDeleteComment: () => {
                return;
            },
            onCancelComment: () => {
                return;
            },
            comments: [
                {
                    id: 1,
                    text: "Some comment with selected area.",
                    userName: "Annonymous",
                    created: "11 December",
                    controlPanel: h.createViewAreaButton("VIEW AREA", () => {
                        alert("Show your document area.");
                    }),
                    submitControlPanel: h.createAddAreaButton(() => {
                        alert("Add your document area for reply.");
                    }),
                    icon: h.iconAnonymousComment,
                    replies: [
                        {
                            id: 11,
                            text: "Some reply.",
                            userName: "John Doe",
                            created: "12 December",
                            icon: h.iconAnonymousReply,
                            controlPanel: h.createViewAreaButton("VIEW AREA", () => {
                                alert("Boooo!");
                            }),
                            replies: []
                        },
                        {
                            id: 12,
                            text: "Second reply.",
                            userName: "John Doe",
                            created: "12 December",
                            icon: h.iconAnonymousReply,
                            replies: []
                        }
                    ]
                }
            ],
            submitControlPanel: h.createAddAreaButton(() => {
                alert("Add your document area for root comment.");
            })
        }),
        size: container.Size.small
    });
};
