import * as b from "bobril";
import * as Container from "bobwai--viewer-container";
import * as Example from "bobwai--example";
import * as LCenter from "../src/lib";

let mockElement = (content: b.IBobrilChildren, width?: number, background?: string): b.IBobrilChildren => {
    return b.styledDiv(content, {
        background: background ? background : "#1697F9",
        padding: 5,
        width: width ? width : "auto",
        display: width ? "inline-block" : "block"
    });
};
let mockParent = (content: b.IBobrilChildren): b.IBobrilChildren => {
    return b.styledDiv(content, { background: "#4F4F4F", height: 100 });
};
Example.init({}, () => {
    return [
        Container.create({
            header: "bobwai--l-center in default state - layout has 100% of parent",
            content: mockParent(
                LCenter.create({
                    children: mockElement("Children")
                })
            )
        }),
        Container.create({
            header: "bobwai--l-center horizontal centered",
            content: mockParent(
                LCenter.create({
                    horizontalCenterType: LCenter.HorizontalCenterType.Center,
                    children: mockElement("Children")
                })
            )
        }),
        Container.create({
            header: "bobwai--l-center horizontal right",
            content: mockParent(
                LCenter.create({
                    horizontalCenterType: LCenter.HorizontalCenterType.Right,
                    children: mockElement("Children")
                })
            )
        }),
        Container.create({
            header: "bobwai--l-center horizontal centered - left align is resetting in inline-block child",
            content: mockParent(
                LCenter.create({
                    horizontalCenterType: LCenter.HorizontalCenterType.Center,
                    childrenDisplayType: LCenter.ChildrenDisplayType.InlineBlock,
                    children: mockElement("Check if child has text align LEFT here", 400, "yellow")
                })
            )
        }),
        Container.create({
            header: "bobwai--l-center horizontal to right - left align is resetting in inline-block child",
            content: mockParent(
                LCenter.create({
                    horizontalCenterType: LCenter.HorizontalCenterType.Right,
                    childrenDisplayType: LCenter.ChildrenDisplayType.InlineBlock,
                    children: mockElement("Check if child has text align LEFT here", 400, "yellow")
                })
            )
        }),
        Container.create({
            header: "bobwai--l-center vertical centering",
            content: mockParent(
                LCenter.create({
                    verticalCenterType: LCenter.VerticalCenterType.Center,
                    children: mockElement("Children is vertically centered")
                })
            )
        }),
        Container.create({
            header: "bobwai--l-center vertical and horizontal centered inline-block",
            content: mockParent(
                LCenter.create({
                    verticalCenterType: LCenter.VerticalCenterType.Center,
                    horizontalCenterType: LCenter.HorizontalCenterType.Center,
                    childrenDisplayType: LCenter.ChildrenDisplayType.InlineBlock,
                    children: mockElement("Check if child has text align LEFT here", 400, "yellow")
                })
            )
        }),
        Container.create({
            header: "bobwai--l-center vertical and horizontal centered with custom height",
            content: LCenter.create({
                height: 400,
                verticalCenterType: LCenter.VerticalCenterType.Center,
                horizontalCenterType: LCenter.HorizontalCenterType.Center,
                childrenDisplayType: LCenter.ChildrenDisplayType.InlineBlock,
                children: mockElement("Check if child has text align LEFT here", 400, "yellow")
            })
        })
    ];
});
