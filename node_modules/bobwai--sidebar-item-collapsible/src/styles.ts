import * as b from "bobril";
import * as Item from "bobwai--sidebar-item";
import * as Color from "bobwai--color";
import * as publicConstants from "./publicConstants";

export namespace localVariables {
    export const itemCollapsibleBottomMediumPadding = 40;
    export const openTransitionTime = ".2s";
    export const openTransitionType = "ease-out";
    export const closeTransitionTime = ".15s";
    export const closeTransitionType = "linear";
}

export const subItemListStyle = b.styleDef(
    {
        borderBottom: Item.Border,
        paddingRight: Item.ItemCollapsibleContentPadding,
        paddingLeft: Item.ItemCollapsibleContentPadding,
        display: "block",
        backgroundColor: Color.White,
        overflow: "hidden",
    },
    {},
    "subItemListStyle"
);

export const subitemNoAnimatedListStyle = b.styleDef(
    {
        paddingBottom: Item.ItemCollapsibleContentPadding,
    },
    {},
    "subItemNoAnimatedListStyle"
);

export const subitemMediumBottomPaddingStyle = b.styleDef(
    {
        paddingBottom: localVariables.itemCollapsibleBottomMediumPadding,
    },
    {},
    "subitemMediumBottomPaddingStyle"
);

export const subItemAnimatedListStyle = b.styleDef(
    {
        transition: `max-height ${localVariables.closeTransitionTime} ${localVariables.closeTransitionType}, min-height ${localVariables.closeTransitionTime} ${localVariables.closeTransitionType}`,
    },
    {},
    "subItemListStyle"
);

export const subItemExpandedListStyle = b.styleDefEx(
    subItemListStyle,
    {
        transition: `max-height ${localVariables.openTransitionTime} ${localVariables.openTransitionType}, min-height ${localVariables.openTransitionTime} ${localVariables.openTransitionType}`,
    },
    {},
    "subItemExpandedListStyle"
);

export const measurableItemStyle = b.styleDef(
    {
        position: "absolute",
        visibility: "hidden",
    },
    {},
    "measurableItemStyle"
);

export const subItemListWithSeparatorStyle = b.styleDefEx(
    subItemListStyle,
    { borderBottomColor: Item.SeparatorColor },
    {},
    "subItemListWithSeparatorStyle"
);

export const collapsibleItemHighlightedExpandedStyle = b.styleDef(
    {
        position: "relative",
    },
    {
        after: {
            content: "",
            background: publicConstants.HighlightedBorderColor,
            width: publicConstants.HighlightedBorderSize,
            position: "absolute",
            bottom: 0,
            left: 0,
            top: -1,
        },
    },
    "collapsibleItemHighlightedExpandedStyle"
);

export const collapsibleItemHighlightedExpandedInvalidStyle = b.styleDefEx(
    collapsibleItemHighlightedExpandedStyle,
    {},
    {
        after: {
            background: Color.Error,
        },
    },
    "collapsibleItemHighlightedExpandedInvalidStyle"
);

export const collapsibleItemHighlightedExpandedWarningStyle = b.styleDefEx(
    collapsibleItemHighlightedExpandedStyle,
    {},
    {
        after: {
            background: Color.Warning,
        },
    },
    "collapsibleItemHighlightedExpandedWarningStyle"
);

export const topBorderStyle = b.styleDef(
    {
        borderTop: Item.Border,
    },
    {},
    "topBorderStyle"
);
