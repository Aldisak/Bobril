import { BBSeeker, BBBot } from "bbseeker-extended";
import * as SidebarItemCollapsible from "../src/lib";
import * as b from "bobril";
import * as Icon from "bobwai--icon";

describe("bobwai--sidebar-item-collapsible test", () => {
    beforeEach(() => {
        b.init(() => {
            return [
                SidebarItemCollapsible.create({
                    id: "1",
                    title: "Title",
                    onClick: () => {},
                    isExpanded: true,
                    collapsibleContent: "colabsible content",
                    counter: b.withKey(b.styledDiv("counter"), "test-counter"),
                    subtitle: "subtitle",
                    iconContent: Icon.create({
                        sprite: b.sprite(Icon.folder_small_png),
                    }),
                }),
            ];
        });
    });
    it("should find the right element according the key", async () => {
        await BBBot.checkIfFullyRendered(5);
        const sidebarItemCollapsibleStructure = await BBSeeker.findElements(".bobwai--sidebar-item-collapsible/div");
        const sideBarItem = await BBSeeker.findElements(".bobwai--sidebar-item-collapsible/.bobwai--sidebar-item/div");
        if (sideBarItem) {
            const iconContent = await BBSeeker.findElement("/.bobwai--icon", sideBarItem[0]);
            const title = await BBSeeker.findElements("/div", sideBarItem[1]);
            const counter = await BBSeeker.findElement("/#test-counter", sideBarItem[2]);
            expect(iconContent).not.toBeNull();
            expect(title[0].textContent).toBe("Title");
            expect(title[1].textContent).toBe("subtitle");
            expect(counter).not.toBeNull();
            if (counter) {
                expect(counter.textContent).toBe("counter");
            } else {
                fail("counter not found");
            }
        } else {
            fail("sidebar not found");
        }

        expect(sidebarItemCollapsibleStructure.length).toBe(2);
        expect(sidebarItemCollapsibleStructure[1].textContent).toBe("colabsible content");
        expect(sideBarItem.length).toBe(3);
    });
});
