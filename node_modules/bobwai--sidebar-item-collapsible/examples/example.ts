import * as b from "bobril";
import * as SidebarItemCollapsible from "../src/lib";
import * as Container from "bobwai--viewer-container";
import * as Example from "bobwai--example";
import * as FormElements from "bobwai--form-elements";

const sampleContent = b.styledDiv("Some content", b.styleDef({ background: "lime" }));
const sampleIcon = b.styledDiv(
    null,
    b.styleDef({ height: 20, width: 20, display: "inline-block", backgroundColor: "#afa", verticalAlign: "middle" })
);

const onClick = (item: SidebarItemCollapsible.IData): boolean => {
    item.isExpanded = !item.isExpanded;
    b.invalidate();
    return true;
};

const data: SidebarItemCollapsible.IData[] = [
    {
        id: "2",
        onClick: onClick,
        title: "Collapsible item with content",
        collapsibleContent: sampleContent,
    },
    {
        id: "3",
        onClick: onClick,
        title: "Collapsible item with content + icon",
        collapsibleContent: sampleContent,
        iconContent: sampleIcon,
    },
    {
        id: "4",
        onClick: onClick,
        title: "Collapsible item with separator (can have different bottom border color)",
        isSeparator: true,
        collapsibleContent: sampleContent,
    },
    { id: "5", onClick: onClick, title: "Collapsible item empty" },
    {
        id: "6",
        onClick: onClick,
        title: "Collapsible invalid item",
        validationState: FormElements.ValidationState.Error,
        errorTooltip: { tooltipMessage: "Error message" },
        collapsibleContent: sampleContent,
    },
    {
        id: "7",
        onClick: onClick,
        title: "Collapsible warning item",
        validationState: FormElements.ValidationState.Warning,
        collapsibleContent: sampleContent,
    },
    {
        id: "8",
        onClick: onClick,
        title: "Collapsible disabled item",
        isDisabled: true,
        collapsibleContent: sampleContent,
    },
    {
        id: "9",
        onClick: onClick,
        title: "Collapsible with medium bottom padding",
        collapsibleContent: sampleContent,
        bottomPadding: SidebarItemCollapsible.BottomPadding.Medium,
    },
    {
        id: "10",
        onClick: onClick,
        title: "Collapsible with content custom side padding",
        collapsibleContent: sampleContent,
        contentSidePadding: SidebarItemCollapsible.SidePadding.None,
    },
];

const highlightedData: SidebarItemCollapsible.IData[] = [
    {
        id: "2",
        isHighlighted: true,
        onClick: onClick,
        title: "Collapsible item with content",
        collapsibleContent: sampleContent,
    },
    {
        id: "3",
        isHighlighted: true,
        onClick: onClick,
        title: "Collapsible item with content + icon",
        collapsibleContent: sampleContent,
        iconContent: sampleIcon,
    },
    {
        id: "4",
        isHighlighted: true,
        onClick: onClick,
        title: "Collapsible item with separator (can have different bottom border color)",
        isSeparator: true,
        collapsibleContent: sampleContent,
    },
    {
        id: "5",
        isHighlighted: true,
        onClick: onClick,
        title: "Collapsible item empty",
    },
    {
        id: "6",
        isHighlighted: true,
        onClick: onClick,
        title: "Collapsible invalid item",
        validationState: FormElements.ValidationState.Error,
        errorTooltip: { tooltipMessage: "Error message" },
        collapsibleContent: sampleContent,
    },
    {
        id: "7",
        isHighlighted: true,
        onClick: onClick,
        title: "Collapsible warning item",
        validationState: FormElements.ValidationState.Warning,
        collapsibleContent: sampleContent,
    },
    {
        id: "8",
        isHighlighted: true,
        onClick: onClick,
        title: "Collapsible disabled item",
        isDisabled: true,
        collapsibleContent: sampleContent,
    },
];

const topBorderData: SidebarItemCollapsible.IData[] = [
    {
        id: "2",
        isHighlighted: true,
        onClick: onClick,
        title: "Collapsible item with top border",
        collapsibleContent: sampleContent,
        topBorderVisible: true,
    },
];

const animatedData: SidebarItemCollapsible.IData[] = [
    {
        id: "2",
        isAnimated: true,
        onClick: onClick,
        title: "Collapsible item with content",
        collapsibleContent: sampleContent,
    },
    {
        id: "3",
        isAnimated: true,
        onClick: onClick,
        title: "Collapsible item with content + icon",
        collapsibleContent: sampleContent,
        iconContent: sampleIcon,
    },
    {
        id: "4",
        isAnimated: true,
        onClick: onClick,
        title: "Collapsible item with separator (can have different bottom border color)",
        isSeparator: true,
        collapsibleContent: sampleContent,
    },
    {
        id: "5",
        isAnimated: true,
        onClick: onClick,
        title: "Collapsible item empty",
    },
    {
        id: "6",
        isAnimated: true,
        onClick: onClick,
        title: "Collapsible invalid item",
        validationState: FormElements.ValidationState.Error,
        errorTooltip: { tooltipMessage: "Error message" },
        collapsibleContent: sampleContent,
    },
    {
        id: "7",
        isAnimated: true,
        onClick: onClick,
        title: "Collapsible warning item",
        validationState: FormElements.ValidationState.Warning,
        collapsibleContent: sampleContent,
    },
    {
        id: "8",
        isAnimated: true,
        onClick: onClick,
        title: "Collapsible disabled item",
        isDisabled: true,
        collapsibleContent: sampleContent,
    },
    {
        id: "9",
        isAnimated: true,
        onClick: onClick,
        title: "Collapsible with medium bottom padding",
        collapsibleContent: sampleContent,
        bottomPadding: SidebarItemCollapsible.BottomPadding.Medium,
    },
];

Example.init({}, () => {
    return [
        Container.create({
            header: "SidebarItemCollapsible complex example",
            content: b.styledDiv("See bobwai--composition--sidebar for complex example of typical usage", { color: "red" }),
        }),
        Container.create({
            header: "SidebarItemCollapsible",
            content: data.map((item: SidebarItemCollapsible.IData) => {
                return SidebarItemCollapsible.create(item);
            }),
        }),
        Container.create({
            header: "SidebarItemCollapsible - highlighted variant",
            content: highlightedData.map((item: SidebarItemCollapsible.IData) => {
                return SidebarItemCollapsible.create(item);
            }),
        }),
        Container.create({
            header: "SidebarItemCollapsible - top border",
            content: topBorderData.map((item: SidebarItemCollapsible.IData) => {
                return SidebarItemCollapsible.create(item);
            }),
        }),
        Container.create({
            type: Container.Type.experimental,
            header: "SidebarItemCollapsible - animated variant",
            content: animatedData.map((item: SidebarItemCollapsible.IData) => {
                return SidebarItemCollapsible.create(item);
            }),
        }),
    ];
});
