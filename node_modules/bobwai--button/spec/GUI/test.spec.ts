import { BBBot, BBSeeker } from "bbseeker-extended";
import { createLayout } from "./layout";
import { getTestStore, clearTestStore } from "./store";
import { Selectors } from "./selector";

describe("bobwai--button UI tests", () => {
    afterEach(() => {
        BBBot.clear();
        clearTestStore();
    });

    it("should be possible to click on button", async () => {
        createLayout();
        const bot = BBBot.createBot();

        if (await BBBot.checkIfFullyRendered(4)) {
            const buttons = BBSeeker.findElements(Selectors.id);
            const firstButton = buttons![0];

            expect(firstButton).toBeDefined();

            await bot.emitLeftMouseClickOnHTMLElement(firstButton);
            expect(getTestStore().clickCount).toBe(1);

            await bot.emitLeftMouseClickOnHTMLElement(firstButton);
            expect(getTestStore().clickCount).toBe(2);

            await bot.emitKeyPress(BBBot.KeyCodes.Enter);
            expect(getTestStore().clickCount).toBe(3);

            await bot.emitKeyPress(BBBot.KeyCodes.Spacebar);
            expect(getTestStore().clickCount).toBe(4);
        } else {
            fail("Test failed due to component was not successfully rendered");
        }
    });

    it("should not be possible to click on disabled button", async () => {
        createLayout();
        const bot = BBBot.createBot();

        if (await BBBot.checkIfFullyRendered(4)) {
            const buttons = BBSeeker.findElements(Selectors.id);
            const disabledButton = buttons![1];

            expect(disabledButton).toBeDefined();

            await bot.emitLeftMouseClickOnHTMLElement(disabledButton);
            expect(getTestStore().clickCount).toBe(0);

            await bot.emitLeftMouseClickOnHTMLElement(disabledButton);
            expect(getTestStore().clickCount).toBe(0);

            await bot.emitKeyPress(BBBot.KeyCodes.Enter);
            expect(getTestStore().clickCount).toBe(0);

            await bot.emitKeyPress(BBBot.KeyCodes.Spacebar);
            expect(getTestStore().clickCount).toBe(0);
        } else {
            fail("Test failed due to component was not successfully rendered");
        }
    });
});
