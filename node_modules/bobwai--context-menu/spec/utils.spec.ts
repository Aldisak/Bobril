import { IItem } from "../src/data";
import { getNextItemIndex, Direction } from "../src/utils";

describe("bobwai--context-menu utils", () => {
    it("should return correct item index for selectable item", () => {
        const items: IItem[] = [
            { content: "item0", onClick: () => {} },
            { content: "item1", onClick: () => {} },
            { content: "item2", onClick: () => {} },
            { content: "item3" },
            { content: "item4", contextMenu: { items: [] } }
        ];
        let index = getNextItemIndex({ items, direction: Direction.Down });
        expect(index).toBe(0);
        index = getNextItemIndex({ items, direction: Direction.Down, currentIndex: 2 });
        expect(index).toBe(4);
        index = getNextItemIndex({ items, direction: Direction.Down, currentIndex: 4 });
        expect(index).toBe(0);

        index = getNextItemIndex({ items, direction: Direction.Up });
        expect(index).toBe(4);
        index = getNextItemIndex({ items, direction: Direction.Up, currentIndex: 4 });
        expect(index).toBe(2);
        index = getNextItemIndex({ items, direction: Direction.Up, currentIndex: 0 });
        expect(index).toBe(4);
    });

    it("should return correct item in case of disabled items", () => {
        const items: IItem[] = [
            { content: "item0", isDisabled: true, onClick: () => {} },
            { content: "item1", onClick: () => {} },
            { content: "item2", onClick: () => {} },
            { content: "item3" },
            { content: "item4", isDisabled: true, onClick: () => {} }
        ];
        let index = getNextItemIndex({ items, direction: Direction.Down });
        expect(index).toBe(1);
        index = getNextItemIndex({ items, direction: Direction.Down, currentIndex: 2 });
        expect(index).toBe(1);

        index = getNextItemIndex({ items, direction: Direction.Up });
        expect(index).toBe(2);
        index = getNextItemIndex({ items, direction: Direction.Up, currentIndex: 1 });
        expect(index).toBe(2);
    });

    it("should return undefined if all items are not selectable", () => {
        const items: IItem[] = [
            { content: "item0" },
            { content: "item1" },
            { content: "item2" },
            { content: "item3" },
            { content: "item4" }
        ];
        let index = getNextItemIndex({ items, direction: Direction.Down });
        expect(index).toBe(undefined);

        index = getNextItemIndex({ items, direction: Direction.Up });
        expect(index).toBe(undefined);

        index = getNextItemIndex({ items, direction: Direction.Down, currentIndex: 4 });
        expect(index).toBe(undefined);
        index = getNextItemIndex({ items, direction: Direction.Up, currentIndex: 4 });
        expect(index).toBe(undefined);
    });

    it("should return undefined if all items are empty", () => {
        const items: IItem[] = [];
        let index = getNextItemIndex({ items, direction: Direction.Down });
        expect(index).toBe(undefined);

        index = getNextItemIndex({ items, direction: Direction.Up });
        expect(index).toBe(undefined);

        index = getNextItemIndex({ items, direction: Direction.Down, currentIndex: 4 });
        expect(index).toBe(undefined);
        index = getNextItemIndex({ items, direction: Direction.Up, currentIndex: 4 });
        expect(index).toBe(undefined);
    });
});
