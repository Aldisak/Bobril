import * as b from "bobril";
import * as s from "./styles";
import * as Color from "bobwai--color";
import * as Icon from "bobwai--icon";
import * as Button from "bobwai--button";
import * as LContentWithFooter from "bobwai--l-content-with-footer";
import * as WebAccessibility from "helpers--web-content-accessibility";
import { contentWithFooterStyle } from "./styles";

export * from "./publicConstants";

export interface IData {
    logoContent: b.IBobrilNode;
    formContent: b.IBobrilNode;
    backLinkContent?: IBackLinkContent;
    footerContent?: b.IBobrilNode;
    isMobile?: boolean;
    customTheme?: ITheme;
}

export interface IBackLinkContent {
    label: string;
    onClick: () => void;
}

export interface ITheme {
    logoBackgroundColor?: Color.IColor;
    logoBackground?: string;
}

interface IContext extends b.IBobrilCtx {
    data: IData;
}

export const create = b.createComponent<IData>({
    id: "bobwai--l-view-login",
    render(ctx: IContext, me: b.IBobrilNode): void {
        me.children = createViewLoginContent(ctx.data);
        b.style(me, s.loginStyle);
    },
});

function createViewLoginContent(data: IData): b.IBobrilChild[] {
    const content = [];

    if (data.footerContent) {
        content.push(
            LContentWithFooter.create({
                footerPosition: LContentWithFooter.FooterPosition.AlwaysBottomScrollable,
                footerContent: data.footerContent,
                children: createContent(data),
            })
        );
    } else {
        content.push(createContent(data));
    }

    if (data.backLinkContent) {
        content.push(createBackLink(data));
    }

    return [
        b.styledDiv(createLogo(data), s.loginFirstStyle, data.isMobile && s.loginFirstMobileStyle, {
            backgroundColor: (data.customTheme && data.customTheme.logoBackgroundColor) || Color.Application,
            background: data.customTheme && data.customTheme.logoBackground,
        }),
        b.styledDiv(content, s.loginSecondStyle, data.isMobile && s.loginSecondMobileStyle),
        b.styledDiv(null, { clear: "both" }),
    ];
}

function createLogo(data: IData): b.IBobrilNode {
    return b.styledDiv(data.logoContent, s.logoStyle);
}

function createContent(data: IData): b.IBobrilNode {
    const content = b.styledDiv(
        [
            b.styledDiv(
                b.styledDiv(data.formContent, s.contentInnerStyle, data.isMobile && s.contentInnerMobileStyle),
                !data.footerContent && s.contentCellStyle
            ),
        ],
        s.contentTableStyle,
        data.footerContent && contentWithFooterStyle
    );
    WebAccessibility.setWebContentAccessibilityAttributes(content, { role: WebAccessibility.ContentAccessibilityRole.Presentation });
    return content;
}

function createBackLink(data: IData): b.IBobrilNode {
    const leftArrowIcon = Icon.create({ sprite: b.sprite(Icon.arrow_left_small_png, Color.Basic) });
    const leftArrowIconHover = Icon.create({ sprite: b.sprite(Icon.arrow_left_small_png, Color.Application) });

    return b.styledDiv(
        Button.create({
            leftIcon: leftArrowIcon,
            leftIconHover: leftArrowIconHover,
            onClick: () => {
                data.backLinkContent && data.backLinkContent.onClick();
            },
            label: data.backLinkContent ? data.backLinkContent.label : "",
            size: Button.Size.Small,
            color: Button.Theme.None,
        }),
        s.backLinkContentStyle,
        data.isMobile && s.backLinkContentMobileStyle
    );
}

// added by script - BEGIN
export const LViewLogin = create;
// added by script - END
