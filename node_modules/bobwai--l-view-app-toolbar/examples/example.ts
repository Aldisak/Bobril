import * as b from "bobril";
import * as Color from "bobwai--color";
import * as Example from "bobwai--example";
import * as LViewAppHeader from "bobwai--l-view-app-header";
import * as LViewAppBreadcrumb from "bobwai--l-view-app-breadcrumb";
import * as CheckBox from "bobwai--checkbox";
import * as Toolbar from "bobwai--toolbar";
import * as LApp from "bobwai--l-app";
import * as LViewAppToolbar from "../src/lib";

let isCombinedWithAppHeader: boolean = true;
let isCombinedWithAppBreadcrumb: boolean = true;
let isToolbarInSmallSize: boolean = true;

const toolbarContent = b.styledDiv(
    "Toolbar content",
    b.styleDef({
        background: Color.Chart_Blue100,
        height: Toolbar.Height
    })
);

const toolbarContentSmall = b.styledDiv(
    "Toolbar content",
    b.styleDef({
        background: Color.Chart_Blue100,
        height: Toolbar.SmallHeight
    })
);

Example.init({}, () => {
    return [
        LApp.create({
            children: [
                LViewAppToolbar.create({
                    children: isToolbarInSmallSize ? toolbarContentSmall : toolbarContent,
                    isCombinedWithAppHeader: isCombinedWithAppHeader,
                    isCombinedWithAppBreadcrumb: isCombinedWithAppBreadcrumb,
                    toolbarSize: isToolbarInSmallSize ? Toolbar.Size.Small : Toolbar.Size.Default
                }),
                isCombinedWithAppHeader &&
                    b.withKey(
                        LViewAppHeader.create({
                            children: b.styledDiv("(space reserved for header)", {
                                color: "gray",
                                paddingTop: 14,
                                paddingLeft: 22,
                                fontStyle: "italic",
                                height: "100%"
                            })
                        }),
                        "key"
                    ),
                isCombinedWithAppBreadcrumb &&
                    b.withKey(
                        LViewAppBreadcrumb.create({
                            children: b.styledDiv("(space reserved for breadcrumb)", {
                                paddingTop: 14,
                                paddingLeft: 22,
                                fontStyle: "italic",
                                height: "100%"
                            }),
                            isCombinedWithAppHeader: isCombinedWithAppHeader
                        }),
                        "key2"
                    ),
                b.styledDiv(
                    [
                        CheckBox.create({
                            value: isCombinedWithAppHeader,
                            title: "Combined with app header",
                            onChange: (value: boolean) => {
                                isCombinedWithAppHeader = value;
                                b.invalidate();
                            }
                        }),
                        CheckBox.create({
                            value: isCombinedWithAppBreadcrumb,
                            title: "Combined with app breadcrumb",
                            onChange: (value: boolean) => {
                                isCombinedWithAppBreadcrumb = value;
                                b.invalidate();
                            }
                        }),
                        CheckBox.create({
                            value: isToolbarInSmallSize,
                            title: "Used With Small variant of Toolbar",
                            onChange: (value: boolean) => {
                                isToolbarInSmallSize = value;
                                b.invalidate();
                            }
                        })
                    ],
                    {
                        position: "fixed",
                        top: 200
                    }
                )
            ]
        })
    ];
});
