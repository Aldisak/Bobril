import { BBBot, BBSeeker } from "bbseeker-extended";
import { createLayout } from "./layout";
import { /*getTestStore,*/ clearTestStore, getTestStore } from "./store";
import { Selectors } from "../../src/testSelectors";

describe("StateIcon UI tests", () => {
    afterEach(() => {
        BBBot.clear();
        clearTestStore();
    });

    it("Should find and click on state icon clickable part", async () => {
        createLayout();
        const bot = BBBot.createBot();

        if (await BBBot.checkIfFullyRendered(4)) {
            const stateIcon = BBSeeker.findElement(Selectors.id);
            const clickableElement = BBSeeker.findElement(Selectors.clickableElement, stateIcon!);

            expect(stateIcon).not.toBeNull();
            expect(clickableElement).not.toBeNull();

            expect(getTestStore().clickCount).toBe(0);
            bot.emitLeftMouseClickOnHTMLElement(clickableElement!);
            expect(getTestStore().clickCount).toBe(1);
            bot.emitLeftMouseClickOnHTMLElement(clickableElement!);
            expect(getTestStore().clickCount).toBe(2);

            bot.emitKeyPress(BBBot.KeyCodes.Enter);
            expect(getTestStore().clickCount).toBe(3);
        } else {
            fail("Test failed due it is not working");
        }
    });
});
