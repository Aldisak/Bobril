import { BBBot, BBSeeker } from "bbseeker-extended";
import { createLayout } from "./layout";
import { clearTestStore } from "./store";
import { Selectors } from "../../src/testSelectors";

describe("ActionWithWindow UI tests", () => {
    afterEach(() => {
        BBBot.clear();
        clearTestStore();
    });

    it("should opened after clicking on button and closed after clicking on overlay ", async () => {
        createLayout();
        const bot = BBBot.createBot();

        if (await BBBot.checkIfFullyRendered(4)) {
            const actionWithWindow = BBSeeker.findElement(Selectors.id + "[0]")!;
            let windowContent = getWindowContent();

            expect(actionWithWindow).not.toBeNull();
            expect(windowContent).toBeNull();

            await bot.emitLeftMouseClickOnHTMLElement(actionWithWindow);
            isWindowOpened(true);
            windowContent = getWindowContent();
            expect(windowContent).not.toBeNull();
            expect(windowContent.innerText).toBe("This is overlay window");

            const overlay = BBSeeker.findElement(Selectors.overlay)!;
            await bot.emitLeftMouseClickOnHTMLElement(overlay);
            isWindowOpened(false);
            windowContent = getWindowContent();
            expect(windowContent).toBeNull();
        } else {
            fail("Test failed due it is not working");
        }
    });

    it("should be posible to use second button with isWindowVisible parameter ", async () => {
        createLayout();
        const bot = BBBot.createBot();

        if (await BBBot.checkIfFullyRendered(4)) {
            const actionWithWindow = BBSeeker.findElement(Selectors.id + "/~.bobwai--button[1]")!;
            expect(actionWithWindow).not.toBeNull();
            let windowContent = getWindowContent();
            isWindowOpened(false);
            expect(windowContent).toBeNull();

            await bot.emitLeftMouseClickOnHTMLElement(actionWithWindow);
            3;
            isWindowOpened(false);
            windowContent = getWindowContent();
            expect(windowContent).not.toBeNull();

            const closeButton = BBSeeker.findElement(Selectors.overlay + Selectors.windowContent + "/~.bobwai--button")!;
            expect(closeButton).not.toBeNull();
            await bot.emitLeftMouseClickOnHTMLElement(closeButton);
            isWindowOpened(false);
            windowContent = getWindowContent();
            expect(windowContent).toBeNull();
        } else {
            fail("Test failed due it is not working");
        }
    });
});

function getWindowContent() {
    return BBSeeker.findElement(Selectors.overlay + Selectors.windowContent)!;
}

function isWindowOpened(isOpened: boolean) {
    const ctx = BBSeeker.getCtxValue(Selectors.id + "[0]", "isWindowVisible");
    expect(ctx).toBe(isOpened ? "true" : "false");
}
