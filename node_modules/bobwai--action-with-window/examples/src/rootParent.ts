import * as ActionWithWindow from "../../src/lib";
import * as Helpers from "./helpers";
import * as Container from "bobwai--viewer-container";
import * as b from "bobril";

export default function (): b.IBobrilNode {
    return Container.create({
        header: "Basic example with root element defined",
        isTest: true,
        content: [
            createContainer({
                actionContent: Helpers.getButton(),
                windowContent: Helpers.getWindow(),
            }),
        ],
        description: "Root will be rendered within current element.",
    });
}

interface IData {
    actionContent: b.IBobrilNode;
    windowContent: b.IBobrilNode;
}

interface ICtx extends b.IBobrilCtx {
    data: IData;
}

const createContainer = b.createComponent<IData>({
    render(ctx: ICtx, me: b.IBobrilNode): void {
        me.children = ActionWithWindow.create({
            actionContent: ctx.data.actionContent,
            windowContent: ctx.data.windowContent,
            rootParent: <HTMLElement>ctx.me.element,
        });
    },
});
