import * as b from "bobril";
import * as ActionWithWindow from "../../src/lib";
import * as Helpers from "./helpers";
import * as Container from "bobwai--viewer-container";
import * as TextBox from "bobwai--textbox";

let isWindowVisible: boolean = false;

const buttonOpen: b.IBobrilNode = b.style(
    {
        tag: "div",
        children: Helpers.getButton(),
        component: {
            onClick(_ctx: b.IBobrilCtx) {
                isWindowVisible = !isWindowVisible;
                b.invalidate();
                return false;
            },
        },
    },
    { cursor: "pointer", display: "inline-block", marginLeft: 10 }
);

const input = TextBox.create({
    placeholder: "Demo",
    onChange: () => null,
});

export default function () {
    return Container.create({
        header: "Usage of isWindowVisible",
        content: [
            Helpers.createVerticalSpace(),

            ActionWithWindow.create({
                isWindowVisible: isWindowVisible,
                actionContent: input,
                windowContent: Helpers.getWindow(),
                preferredPlacement: ActionWithWindow.Placement.BottomCenter,
                onCloseWindow: () => {
                    isWindowVisible = false;
                    b.invalidate();
                },
            }),

            buttonOpen,
        ],
        description:
            "Window is shown (centered) under text-box and its visibility" + " is controlled by application (by button in this example)",
    });
}
