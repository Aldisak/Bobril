import * as b from "bobril";
import * as ActionWithWindow from "../../src/lib";
import * as Helpers from "./helpers";
import * as Container from "bobwai--viewer-container";
import * as Button from "bobwai--button";
import { IBobrilNode } from "bobril";

let isWindowOpened = false;
let model = "";

export default function (): IBobrilNode[] {
    return [
        Container.create({
            header: "has Animation 1. case > automatic mode > property isWindowVisible is not use",
            content: [
                ActionWithWindow.create({
                    actionContent: Helpers.getButton(false, undefined),
                    windowContent: Helpers.getWindow(""),
                    hasAnimation: true,
                    onCloseWindow: () => {
                        // this callback is never called because automatic mode is used (isWindowVisible is not used)
                    },
                }),
            ],
            description: "In  this case nothing special is needed because onCloseWindow is not triggered, just add hasAnimation: true",
        }),
        Container.create({
            header: "has Animation 2. case > manual mode > property isWindowVisible is use",
            content: [
                ActionWithWindow.create({
                    actionContent: Button.create({
                        label: "Open window manually",
                        onClick: () => {
                            isWindowOpened = true;
                            b.invalidate();
                        },
                    }),
                    windowContent: Helpers.getWindow(
                        Button.create({
                            label: "Close window",
                            onClick: () => {
                                isWindowOpened = false;
                                b.invalidate();
                            },
                        })
                    ),
                    isWindowVisible: isWindowOpened,
                    hasAnimation: true,
                    onCloseWindow: (animationWasFinished) => {
                        // isWindowOpened = false; uncomment if you need close window on overlay click
                        if (animationWasFinished) {
                            // there you can remove action with window from DOM if you need
                        }
                        model += `onCloseWindow was called - animation was finished: ${animationWasFinished}, `;
                        b.invalidate();
                    },
                }),
            ],
            description:
                "Add onCloseWindow - if isWindowVisible is set to false, wait for onCloseWindow callback with animationWasFinished confirmation",
            model: model,
        }),
    ];
}
