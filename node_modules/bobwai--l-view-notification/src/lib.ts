import * as b from "bobril";
import * as LViewLogin from "bobwai--l-view-login";
import * as LViewSidebar from "bobwai--l-view-sidebar";
import * as Constants from "./publicConstants";

export let create = b.createComponent<IData>({
    id: "bobwai--l-view-notification",
    render(ctx: IContext, me: b.IBobrilNode): void {
        me.children = ctx.data.children;
        b.style(me, getStyles(ctx.data));
    }
});

export interface IData {
    children: b.IBobrilChildren;
    isCombinedWithLogin?: boolean;
    isCombinedWithSidebar?: boolean;
    sidebarWidth?: LViewSidebar.SidebarWidth;
}

interface IContext extends b.IBobrilCtx {
    data: IData;
}

export * from "./publicConstants";

function getStyles(data: IData): b.IBobrilStyles {
    return [
        baseStyle,
        data.isCombinedWithSidebar && { left: LViewSidebar.getWidthValue(data.sidebarWidth || LViewSidebar.SidebarWidth.Default) },
        data.isCombinedWithLogin && { left: `${LViewLogin.borderPercent}%` }
    ];
}

const baseStyle = b.styleDef(
    {
        position: "fixed",
        left: 0,
        right: 0,
        bottom: 0,
        zIndex: Constants.ZIndex
    },
    {},
    "l-view-notification"
);

// added by script - BEGIN
export const LViewNotification = create;
// added by script - END
