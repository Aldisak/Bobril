import * as b from "bobril";
import * as LApp from "bobwai--l-app";
import * as Checkbox from "bobwai--checkbox";
import * as NotificationBar from "bobwai--notification-bar";
import * as Example from "bobwai--example";
import * as LViewNotification from "../src/lib";

let onClose = () => {
    alert("Notification is closed.");
};

let isCombinedWithSidebar = false;
let isCombinedWithLogin = false;

function sidebarCheckbox(): b.IBobrilNode {
    return Checkbox.create({
        value: isCombinedWithSidebar,
        title: "In combination with sidebar (will be ignored in case that isCombinedWithLogin is set to true)",
        onChange: (value: boolean): void => {
            isCombinedWithSidebar = value;
            b.invalidate();
        }
    });
}

function loginCheckbox(): b.IBobrilNode {
    return Checkbox.create({
        value: isCombinedWithLogin,
        title: "In combination with login",
        onChange: (value: boolean): void => {
            isCombinedWithLogin = value;
            b.invalidate();
        }
    });
}

function createApp(_isCombinedWithSidebar: boolean, _isCombinedWithLogin: boolean): b.IBobrilNode {
    return LApp.create({
        children: LViewNotification.create({
            children: NotificationBar.create({
                title:
                    "This is something you should probably know. Lorem ipsum dolor sit amet. " +
                    "This is something you should probably know. Lorem ipsum dolor sit amet." +
                    "This is something you should probably know. Lorem ipsum dolor sit amet.",
                onClose: onClose
            }),
            isCombinedWithSidebar: _isCombinedWithSidebar,
            isCombinedWithLogin: _isCombinedWithLogin
        })
    });
}

Example.init({}, () => {
    return [sidebarCheckbox(), loginCheckbox(), createApp(isCombinedWithSidebar, isCombinedWithLogin)];
});
