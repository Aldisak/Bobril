import { BBSeeker, BBBot } from "bbseeker-extended";
import * as TabItem from "../src/lib";
import * as b from "bobril";
import * as Icon from "bobwai--icon";

describe("bobwai--tab-item test", () => {
    beforeEach(() => {
        b.init(() => {
            return [
                TabItem.create({
                    label: "label",
                }),
                TabItem.create({
                    label: "",
                    iconContent: Icon.create({ sprite: b.sprite(Icon.plugin_medium_png) }),
                    selectedIconContent: Icon.create({ sprite: b.sprite(Icon.plugin_medium_png) }),
                }),
                TabItem.create({
                    label: "label",
                    counter: 10,
                }),
            ];
        });
    });
    it("check structure", async () => {
        await BBBot.checkIfFullyRendered(5);
        const item = await BBSeeker.findElement(".bobwai--tab-item[0]/div");
        const icon = await BBSeeker.findElement(".bobwai--tab-item[1]/~.bobwai--icon");
        expect(item).not.toBeNull();
        expect(icon).not.toBeNull();
        if (item) {
            expect(item.textContent).toBe("label");
        } else {
            fail("item not found");
        }
    });
    it("check label with counter", async () => {
        await BBBot.checkIfFullyRendered(5);
        const content = await BBSeeker.findElements(".bobwai--tab-item[2]/div/div");
        expect(content.length).not.toBe(0);
        expect(content[0].textContent).toBe("label");
        expect(content[1].textContent).toBe("10");
    });
});
