import * as b from "bobril";
import * as Container from "bobwai--viewer-container";
import * as Example from "bobwai--example";
import * as IconCheckbox from "../src/lib";
import * as Icon from "bobwai--icon";
import * as Color from "bobwai--color";
import * as FormElements from "bobwai--form-elements";

let iconCheck = Icon.create({
    sprite: b.sprite(Icon.visible_small_png, Color.Grey600)
});

let iconCheckHover = Icon.create({
    sprite: b.sprite(Icon.visible_small_png, Color.Basic)
});

let iconUnCheckHover = Icon.create({
    sprite: b.sprite(Icon.invisible_small_png, Color.Basic)
});

let iconUnCheck = Icon.create({
    sprite: b.sprite(Icon.invisible_small_png, Color.Grey600)
});

let value = false;

Example.init({}, () => {
    return [
        Container.create({
            header: "bobwai--icon-checkbox with image hover",
            content: IconCheckbox.create({
                value: value,
                checkedImage: iconCheck,
                uncheckedImage: iconUnCheck,
                checkedHoverImage: iconCheckHover,
                uncheckedHoverImage: iconUnCheckHover,
                onChange: v => {
                    value = v;
                    b.invalidate();
                }
            })
        }),
        Container.create({
            header: "bobwai--icon-checkbox without image hover",
            content: IconCheckbox.create({
                value: value,
                checkedImage: iconCheck,
                uncheckedImage: iconUnCheck,
                onChange: v => {
                    value = v;
                    b.invalidate();
                }
            })
        }),
        Container.create({
            header: "bobwai--icon-checkbox with background color",
            content: IconCheckbox.create({
                value: value,
                checkedImage: iconCheck,
                uncheckedImage: iconUnCheck,
                backgroundColor: Color.Chart_Blue100,
                displayAs: FormElements.DisplayAs.InlineBlock,
                onChange: v => {
                    value = v;
                    b.invalidate();
                }
            })
        })
    ];
});
