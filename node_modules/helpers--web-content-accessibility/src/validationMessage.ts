import * as b from "bobril";
import { IWebContentAccessibility } from "./data";
import { AriaAttributeName } from "./webContentAccessibilityAttributes";
import { ContentAccessibilityLive, ContentAccessibilityRole } from "./data";
import { ValidationError } from "bobwai--style-mixins";

export function tryToGetAccessibleValidationMessageNode(webContentAccessibility?: IWebContentAccessibility): b.IBobrilNode | undefined {
    if (webContentAccessibility) {
        if (webContentAccessibility.validationMessage && webContentAccessibility.validationMessageNodeId) {
            const validationMessage = webContentAccessibility.validationMessage;
            const id = webContentAccessibility.validationMessageNodeId;

            const validationMessageNode = b.styledDiv(
                getValidationMessageChildren(validationMessage),
                ValidationError.inputWCAGValidationMessageHiddenStyle
            );
            validationMessageNode.attrs = {
                [AriaAttributeName.live]: ContentAccessibilityLive.Assertive,
                [AriaAttributeName.id]: id,
                [AriaAttributeName.role]: ContentAccessibilityRole.Alert,
            };
            return validationMessageNode;
        }
    }
    return undefined;
}

function getValidationMessageChildren(validationMessage: string | string[]): b.IBobrilChild {
    if (b.isArray(validationMessage)) {
        return validationMessage.join(" ");
    }
    return validationMessage;
}
