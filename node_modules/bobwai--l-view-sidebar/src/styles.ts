import * as b from "bobril";
import * as constants from "./publicConstants";
import * as Color from "bobwai--color";

namespace localVariables {
    export const headerPaddingLeftRight = 25;
    export const headerPaddingTop = 31;
    export const headerPaddingBottom = 9;
    export const borderColor = Color.Grey300;
}

const border = `1px solid ${localVariables.borderColor}`;

export const baseStyle = b.styleDef(
    {
        position: "fixed",
        // note: top/bottom is used (instead height: 100%) to be enable combination
        top: 0,
        bottom: 0,
        overflow: "auto",
        overflowX: "hidden",
        borderRight: border,
        boxSizing: "border-box", // so the border is part of sidebar width
        background: constants.Background
    },
    {},
    "l-view-sidebar"
);

export const baseWithoutScrollbarsStyle = b.styleDefEx(baseStyle, {
    overflow: "hidden"
});

export const rightSidebarStyle = b.styleDefEx(baseStyle, {
    right: 0,
    borderLeft: border,
    borderRight: "none",
    position: "absolute"
});

export const headerStyle = b.styleDef({
    position: "absolute",
    boxSizing: "border-box",
    height: constants.HeaderHeight,
    width: "100%",
    borderBottom: border
});

export const headerWithTabsStyle = b.styleDefEx(headerStyle, {
    borderBottom: "none"
});

export const headerFullHeightStyle = b.styleDefEx(headerStyle, {
    height: constants.HeaderFullHeight
});

export const headerContentStyle = b.styleDef({
    padding: `${localVariables.headerPaddingTop}px ${localVariables.headerPaddingLeftRight}px ${localVariables.headerPaddingBottom}px`
});

export const headerTabContentStyle = b.styleDef({
    position: "absolute",
    width: "100%",
    bottom: 0
});

export const bodyStyle = b.styleDef({
    boxSizing: "border-box",
    height: "100%"
});

export const bodyWithHeaderStyle = b.styleDef({
    paddingTop: constants.HeaderHeight
});

export const bodyWithFullHeightHeaderStyle = b.styleDefEx(bodyStyle, {
    paddingTop: constants.HeaderFullHeight
});
